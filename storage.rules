rules_version = '2';
service firebase.storage {
  match /b/{bucket}/o {
    
    // ===== REGRAS PARA COMPROVANTES DE CERTIFICAÇÃO =====
    
    // Regras para comprovantes de certificação
    match /certification_proofs/{userId}/{filename} {
      // Usuários podem fazer upload de seus próprios comprovantes
      allow write: if request.auth != null && 
        request.auth.uid == userId &&
        // Limitar tamanho a 5MB
        request.resource.size < 5 * 1024 * 1024 &&
        // Permitir apenas imagens e PDFs
        (request.resource.contentType.matches('image/.*') || 
         request.resource.contentType == 'application/pdf');
      
      // Usuários podem ler seus próprios comprovantes
      allow read: if request.auth != null && 
        request.auth.uid == userId;
      
      // Admins podem ler todos os comprovantes
      allow read: if request.auth != null && 
        isAdmin();
      
      // Usuários podem deletar seus próprios comprovantes
      allow delete: if request.auth != null && 
        request.auth.uid == userId;
    }
    
    // ===== REGRAS PARA IMAGENS DE PERFIL (COMPATIBILIDADE) =====
    
    // Regras para fotos de perfil
    match /profile_photos/{userId}/{filename} {
      allow write: if request.auth != null && 
        request.auth.uid == userId &&
        request.resource.size < 5 * 1024 * 1024 &&
        request.resource.contentType.matches('image/.*');
      
      allow read: if request.auth != null;
      
      allow delete: if request.auth != null && 
        request.auth.uid == userId;
    }
    
    // Regras para fotos de stories
    match /story_photos/{userId}/{filename} {
      allow write: if request.auth != null && 
        request.auth.uid == userId &&
        request.resource.size < 10 * 1024 * 1024 &&
        request.resource.contentType.matches('image/.*');
      
      allow read: if request.auth != null;
      
      allow delete: if request.auth != null && 
        request.auth.uid == userId;
    }
    
    // ===== FUNÇÕES AUXILIARES =====
    
    // Verifica se usuário é admin
    function isAdmin() {
      return firestore.get(/databases/(default)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }
  }
}
